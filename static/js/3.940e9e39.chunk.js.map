{"version":3,"sources":["components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","ProfileStatusWithHooks","props","useState","editMode","setEditMode","status","setStatus","useEffect","onClick","onChange","e","currentTarget","value","onBlur","updateUserStatus","autoFocus","ProfileInfo","profile","className","s","ProfileInfoStyle","descriptionBlock","fullName","src","photos","large","defaultUserPhoto","isOwner","type","target","files","length","saveProfileUserPhoto","aboutMe","contacts","facebook","website","vk","twitter","instagram","youtube","github","mainLink","lookingForAJob","lookingForAJobDescription","Post","item","message","likesCount","maxLength10","maxLengthCreator","NewPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","placeholder","name","component","TextArea","validate","required","MyPosts","posts","postsData","map","post","id","postsBlock","formData","addPost","newPost","MyPostsContainer","connect","state","profilePage","postText","dispatch","addPostAС","Profile","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getUserStatus","refreshProfile","prevProps","prevState","snapshot","React","Component","compose","auth","isAuth","withRouter"],"mappings":"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","file":"static/js/3.940e9e39.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1RyQZ\",\"ProfileInfoStyle\":\"ProfileInfo_ProfileInfoStyle__2IOmj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__2Cuks\",\"posts\":\"MyPosts_posts__1c3G8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__qRn5i\"};","import React, {useEffect, useState} from \"react\";\r\nimport {updateUserStatus} from \"../../../redux/profile-reducer\";\r\n\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status)\r\n        }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateUserStatus(status);\r\n    }\r\n\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onClick={activateEditMode}>{props.status || \"--------------\"}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange}\r\n                       onBlur={deactivateEditMode}\r\n                       autoFocus={true}\r\n                       value={status}\r\n                />\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n\r\n}\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport Preloader from \"../../common/Preloader/preloader\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport defaultUserPhoto from \"../../../assets/image/anonymous-avatar-icon-9.jpg\";\r\n\r\nconst ProfileInfo = (props) => {\r\n    if (!props.profile) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const onProfileUserPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.saveProfileUserPhoto(e.target.files[0]);\r\n        }\r\n        ;\r\n    };\r\n\r\n    return (\r\n        <div className={s.ProfileInfoStyle}>\r\n            <div className={s.descriptionBlock}>\r\n                <div>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <img src={props.profile.photos.large != null ? props.profile.photos.large : defaultUserPhoto}/>\r\n                {props.isOwner && <input type={\"file\"} onChange={onProfileUserPhotoSelected}/>}\r\n                <ProfileStatusWithHooks status={props.status} updateUserStatus={props.updateUserStatus}/>\r\n                <div>\r\n                    <div>Обо мне: {props.profile.aboutMe}</div>\r\n                    <div> Контакты:\r\n                        <div>Фейсбук {props.profile.contacts.facebook}</div>\r\n                        <div>Мой сайт {props.profile.contacts.website}</div>\r\n                        <div>ВК {props.profile.contacts.vk}</div>\r\n                        <div>Твиттер {props.profile.contacts.twitter}</div>\r\n                        <div>Инстарграмм {props.profile.contacts.instagram}</div>\r\n                        <div>Ютуб {props.profile.contacts.youtube}</div>\r\n                        <div>ГитХаб {props.profile.contacts.github}</div>\r\n                        <div>Главная ссылка {props.profile.contacts.mainLink}</div>\r\n                    </div>\r\n                    <div>\r\n                        {props.profile.lookingForAJob && \"В поиске работы: \" + props.profile.lookingForAJobDescription}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import s from \"./Post.module.css\";\r\nimport React from \"react\";\r\n\r\n\r\nconst Post = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img src='https://i.pinimg.com/736x/98/b9/52/98b952001792e2b836669abf4d853712.jpg'/>\r\n            {props.message}\r\n            <div>\r\n                <span>like {props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default Post;","import s from \"./MyPosts.module.css\";\r\nimport React from \"react\";\r\nimport Post from \"./Post/Post\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {required, maxLengthCreator} from \"../../../utils/validators/validators\";\r\nimport {TextArea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength10 = maxLengthCreator(10);\r\n\r\nconst NewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                    placeholder={\"Добавить новый пост\"}\r\n                    name={\"newPost\"}\r\n                    component={TextArea}\r\n                    validate={[required, maxLength10]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst NewPostReduxForm = reduxForm({form: 'newPost'})(NewPostForm);\r\n\r\nconst MyPosts = (props) => {\r\n\r\n    let posts = props.postsData\r\n        .map(post =>\r\n            <Post message={post.message} likesCount={post.likesCount} key={post.id}/>\r\n        );\r\n\r\n    const addNewPost = (formData) => {\r\n        props.addPost(formData.newPost)\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <NewPostReduxForm onSubmit={addNewPost}/>\r\n            <div className={s.posts}>\r\n                {posts}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default MyPosts;","import React from \"react\";\r\nimport {addPostAС} from \"../../../redux/profile-reducer\";\r\nimport MyPosts from \"./MyPosts\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        postsData: state.profilePage.postsData,\r\n        postText: state.profilePage.postText\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPost) => {\r\n            dispatch(addPostAС(newPost));\r\n        }\r\n    };\r\n};\r\n\r\n\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\n\r\nconst Profile = (props) => {\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateUserStatus={props.updateUserStatus}\r\n                         saveProfileUserPhoto={props.saveProfileUserPhoto}\r\n            />\r\n            <MyPostsContainer/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getUserProfile, getUserStatus, updateUserStatus, saveProfileUserPhoto} from \"../../redux/profile-reducer\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {compose} from \"redux\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n            if (!userId) {\r\n                this.props.history.push(\"/login\");\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId);\r\n        this.props.getUserStatus(userId);\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile();\r\n    };\r\n\r\n    componentDidUpdate(prevProps, prevState, snapshot) {\r\n        if (this.props.match.params.userId != prevProps.match.params.userId) {\r\n            this.refreshProfile();\r\n        }\r\n        ;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateUserStatus={this.props.updateUserStatus}\r\n                     saveProfileUserPhoto={this.props.saveProfileUserPhoto}\r\n            />\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getUserStatus, updateUserStatus, saveProfileUserPhoto}),\r\n    withRouter,\r\n)\r\n(ProfileContainer)\r\n"],"sourceRoot":""}