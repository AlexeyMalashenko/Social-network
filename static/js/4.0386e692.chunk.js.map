{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/Message/Message.jsx","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Dialogs.jsx","components/hoc/withAuthRedirect.js","components/Dialogs/Message/DialogsContainer.jsx"],"names":["module","exports","Message","props","className","s","message","DialogItem","dialog","active","to","id","name","maxLength100","maxLengthCreator","AddMessageReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","placeholder","validate","required","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","messagesElements","messages","isAuth","dialogsItems","formData","sendMessage","newMessageBody","mapStateToPropsForRedirect","auth","AuthRedirectComponent","Component","RedirectComponent","this","React","connect","withAuthRedirect","DialogsContainer","dispatch","addMessageActionCreator"],"mappings":"qFACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,OAAS,wBAAwB,SAAW,4B,qFCS/HC,EANC,SAACC,GACb,OACI,qBAAKC,UAAWC,IAAEC,QAAlB,SAA4BH,EAAMG,W,QCM3BC,EARI,SAACJ,GAChB,OACI,qBAAKC,UAAS,UAAKC,IAAEG,OAAP,YAAiBH,IAAEI,QAAjC,SACI,cAAC,IAAD,CAASC,GAAI,YAAcP,EAAMQ,GAAjC,SAAsCR,EAAMS,U,0CCElDC,EAAeC,YAAiB,KAsDhCC,EAAsBC,YAAU,CAACC,KAAM,wBAAjBD,EApBL,SAACb,GACpB,OACI,uBAAMe,SAAUf,EAAMgB,aAAtB,UACI,8BACI,cAACC,EAAA,EAAD,CACOC,UAAWC,IACXV,KAAM,iBACNW,YAAa,6HACbC,SAAU,CAACC,IAAUZ,OAGhC,8BACI,oGAUDa,EAtDC,SAACvB,GACb,IAAIwB,EAAQxB,EAAMyB,YAEdC,EAAkBF,EAAMG,QACvBC,KAAI,SAAAvB,GAAM,OACP,cAAC,EAAD,CAAYI,KAAMJ,EAAOI,KAAMD,GAAIH,EAAOG,IAASH,EAAOG,OAG9DqB,EAAmBL,EAAMM,SACxBF,KAAI,SAAAzB,GAAO,OACR,cAAC,EAAD,CAASA,QAASA,EAAQA,SAAcA,EAAQK,OAGxD,IAAKR,EAAM+B,OAAQ,OAAO,cAAC,IAAD,CAAUxB,GAAI,WAKxC,OACI,sBAAKN,UAAWC,IAAEyB,QAAlB,UACI,qBAAK1B,UAAWC,IAAE8B,aAAlB,SACKN,IAEL,sBAAKzB,UAAWC,IAAE4B,SAAlB,UACKD,EACD,cAACjB,EAAD,CAAqBG,SAVX,SAACkB,GACnBjC,EAAMkC,YAAYD,EAASE,0B,+CCtB/BC,EAA6B,SAACZ,GAAD,MAAY,CACzCO,OAAQP,EAAMa,KAAKN,SCanBO,EDV4B,SAACC,GAAe,IAEtCC,EAFqC,4JAGvC,WACI,OAAKC,KAAKzC,MAAM+B,OAET,cAACQ,EAAD,eAAeE,KAAKzC,QAFI,cAAC,IAAD,CAAUO,GAAG,eAJT,GAEXmC,aAUhC,OAFqCC,YAAQP,EAARO,CAAoCH,GCAjDI,CAAiBrB,GAEvCsB,EAAmBF,aAfH,SAACnB,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAGF,SAACqB,GACtB,MAAO,CACHZ,YAAa,SAACC,GACVW,EAASC,YAAwBZ,QAOpBQ,CAA6CL,GAEvDO","file":"static/js/4.0386e692.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2COmW\",\"dialogsItems\":\"Dialogs_dialogsItems__1wXrc\",\"active\":\"Dialogs_active__3unhG\",\"messages\":\"Dialogs_messages__7IyTU\"};","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\n\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;\r\n","import React from 'react';\r\nimport s from './../Dialogs.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={`${s.dialog} ${s.active}`}>\r\n            <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;\r\n","import React from 'react';\r\nimport s from './Dialogs.module.css';\r\nimport Message from \"./Message/Message\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {TextArea} from \"../common/FormsControls/FormsControls\";\r\nimport {maxLengthCreator, required} from \"../../utils/validators/validators\";\r\n\r\nconst maxLength100 = maxLengthCreator(100);\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs\r\n        .map(dialog =>\r\n            <DialogItem name={dialog.name} id={dialog.id} key={dialog.id}/>\r\n        );\r\n\r\n    let messagesElements = state.messages\r\n        .map(message =>\r\n            <Message message={message.message} key={message.id}/>\r\n        );\r\n\r\n    if (!props.isAuth) return <Redirect to={\"/login\"}/>;\r\n\r\n    const addNewMessage = (formData) => {\r\n        props.sendMessage(formData.newMessageBody);\r\n    }\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElements}\r\n                <AddMessageReduxForm onSubmit={addNewMessage}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field\r\n                       component={TextArea}\r\n                       name={\"newMessageBody\"}\r\n                       placeholder={\"Введите ваше сообщение\"}\r\n                       validate={[required, maxLength100]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button>\r\n                    Отправить\r\n                </button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddMessageReduxForm = reduxForm({form: 'dialogAddMessageForm'})(AddMessageForm)\r\n\r\nexport default Dialogs;\r\n","import * as React from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {connect} from \"react-redux\";\r\n\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to='/login'/>\r\n\r\n            return <Component {...this.props} />\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent);\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}\r\n","import React from 'react';\r\nimport { addMessageActionCreator} from \"../../../redux/dialogs-reducer\"\r\nimport Dialogs from \"../Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    };\r\n};\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(addMessageActionCreator(newMessageBody));\r\n        }\r\n    };\r\n};\r\n\r\nlet AuthRedirectComponent = withAuthRedirect(Dialogs);\r\n\r\nconst DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(AuthRedirectComponent);\r\n\r\nexport default DialogsContainer;\r\n\r\n//export default compose(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(DialogsContainer)"],"sourceRoot":""}